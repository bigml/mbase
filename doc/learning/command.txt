网络
---

rpcinfo -p localhost give a listing of running RPC programs that has to include mountd, portmapper, nfs, and nlockmgr


备份
---
I
    # 在每台工作中心机上，添加以下几条crontab（请自行修改机器名、目录等），以自动增量备份，不自动同步删除，不然无法达到目标。

# 上传
0,20,40 * * * * echo `date` >> /tmp/backup_code.log; rsync -avu /Users/ml/code/ alia:/root/code/ >> /tmp/backup_code.log 2>&1
5,25,45 * * * * echo `date` >> /tmp/backup_doc.log; rsync -avu /Users/ml/doc/ alia:/root/doc/ >> /tmp/backup_doc.log 2>&1

# 下载
10,30,50 * * * * echo `date` >> /tmp/receive_code.log; rsync -avu alia:/root/code/ /Users/ml/code/ >> /tmp/receive_code.log 2>&1
15,35,55 * * * * echo `date` >> /tmp/receive_doc.log; rsync -avu alia:/root/doc/ /Users/ml/doc/ >> /tmp/receive_doc.log 2>&1

    # 上传
    7,17,27,37,47,57 * * * * echo `date` >> /tmp/backup_code.log; rsync -avu /Users/bigml/code odroid@odr:/home/odroid/yun/ >> /tmp/backup_code.log 2>&1
    38 * * * * echo `date` >> /tmp/backup_meiti.log; rsync -avu /Volumes/opt/媒体 odroid@odr:/home/odroid/yun/ >> /tmp/backup_meiti.log 2>&1
    49 * * * * echo `date` >> /tmp/backup_work.log; rsync -avu /Volumes/opt/work odroid@odr:/home/odroid/yun/ >> /tmp/backup_work.log 2>&1

    # 下载
    */5 * * * * echo `date` >> /tmp/receive_code.log; rsync -avu odroid@odr:/home/odroid/yun/code/ /Users/bigml/code/ >> /tmp/receive_code.log 2>&1
    12 * * * * echo `date` >> /tmp/receive_meiti.log; rsync -avu odroid@odr:/home/odroid/yun/媒体/ /Volumes/opt/媒体/ >> /tmp/receive_meiti.log 2>&1
    23 * * * * echo `date` >> /tmp/receive_work.log; rsync -avu odroid@odr:/home/odroid/yun/work/ /Volumes/opt/work/ >> /tmp/receive_work.log 2>&1

    # 中心机开机最多5分钟后（每隔5分钟），会从备份机上同步最新代码至本机。
    # 错峰出行，每隔10分钟（逢7）,上传一次代码。故，中心机上的代码最多10分钟会做好备份。请确保下载代码2分钟之内搞定。
    # 中心机的媒体和work需要等到后半个小时才会备份。
    # 备份机的媒体和work前半个小时会同步至中心机。

    # @reboot 是个假的。
    # 每次开机把 odr 上的修改同步到 本机
    @reboot rsync -avu odroid@odr:/home/odroid/yun/code/ /Users/bigml/code/ >> /tmp/receive_code.log 2>&
    @reboot rsync -avu odroid@odr:/home/odroid/yun/媒体/ /Volumes/opt/媒体/ >> /tmp/receive_meiti.log 2>&
    @reboot rsync -avu odroid@odr:/home/odroid/yun/work/ /Volumes/opt/work/ >> /tmp/receive_work.log 2>&

    code 后面的 / 表示同步其目录下内容，不加 / 表示同步他自身。


II

    # 空间不够时，需要如下手动清理空间。
    machine one:
      1. cd code; rm -rf RUBISH
      2. rsync -avu --delete /Users/bigml/code odroid@odr:/home/odroid/yun/

    machine others:
      1.  rsync -avu --delete odroid@odr:/home/odroid/yun/code/ /Users/bigml/code/



              field          allowed values
              -----          --------------
              minute         0-59
              hour           0-23
              day of month   1-31
              month          1-12 (or names, see below)
              day of week    0-7 (0 or 7 is Sun, or use names)



恢复文件
------
grep -a -B 50 -A 60 'some string in the file' /dev/sda1 > result.txt

关于grep的-a意为–binary-files=text，也就是把二进制文件当作文本文件。
-B和-A的选项就是这段字符串之前几行和之后几行。
/dev/sda1，就是硬盘设备，
> results.txt，就是把结果重定向到results.txt文件中。


批量替换
------
sed -i "s/oldstring/newstring/g" `grep oldstring -rl yourdir`



sed -i 's/\(\/\* Amalgamated: \)\(#include ".*"\)\( \*\/\)/\2/g' x.c

/* Amalgamated: #include "common/cs_dbg.h" */
===>
#include "common/cs_dbg.h"



日期处理
------
输出当前秒数
date +%s
date +%s 和 time(NULL) 返回的数字一样，都是 seconds since 00:00:00 UTC
故，无论在什么时区设置的机器上，其返回的数字都是一致的（不会因Timezone选择不同而不同）。
所以，用其判断系统当前日期、时间，必须使用localtime()函数（如mutl_getdatetime()）。
或者，在这个秒数的基础上手动加上时区秒数（在使用mevent的g_ctime时特别注意）。


输出某特定时刻的秒数
date -d "2011-11-15 00:00:00" +%s

今天的日期
TODAY=`date +%Y%m%d`

将秒数转换成日期
date -d "$((1354494968 - `date '+%s'` )) sec" +'%Y-%-m-%-d %H:%M:%S'


进程启动时间
----------
ps -eo pid,tty,user,comm,stime,etime


添加用户
------
快速添加账号
#useradd -d /home/hjj -m hjj
#passwd hjj

完善信息添加账号
#adduser hjj


创建密匙
------
cd ~/.ssh (with mode 700)
mkdir key_backup
cp id_rsa* key_backup
rm id_rsa*
ssh-keygen -t rsa -C "bigmaliang@gmail.com"

测试当前用户在 github 上的登录名
ssh -[v]T git@github.com


网络及查找机器
-------------

用namp对局域网扫描一遍，然后查看arp缓存表就可以知道局域内ip对应的mac了
# nmap -sP 192.168.1.0/24 扫描局域网内的机器
# arp -a | grep b8:27:eb:f1:27:1f


查看指定端口的流量占用
# iftop -P -f "port 6001 or (src host iZwz9fkz67tuns8f78ed31Z and src port 80)"

文本方式查看60秒数据
# iftop -t -s 60



修改路由
------
#route 查看路由表
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
115.182.70.70   172.16.255.254  255.255.255.255 UGH   0      0        0 ppp0
115.182.70.70   172.16.255.254  255.255.255.255 UGH   0      0        0 ppp0
172.16.255.254  *               255.255.255.255 UH    0      0        0 ppp0
192.168.11.255  *               255.255.255.255 UH    0      0        0 ppp1
default         *               0.0.0.0         U     0      0        0 ppp1
比如这里，除了192.168.3.*走ppp1，其余全走ppp0可以这样操作：
#route add -net 192.168.3.0 netmask 255.255.255.0 dev ppp1
$sudo route -nv add -net 192.168.3.0 -netmask 255.255.255.0 -interface ppp1(mac osx)
#route del default
#route add default dev ppp0
#route
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
115.182.70.70   172.16.255.254  255.255.255.255 UGH   0      0        0 ppp0
115.182.70.70   172.16.255.254  255.255.255.255 UGH   0      0        0 ppp0
172.16.255.254  *               255.255.255.255 UH    0      0        0 ppp0
192.168.11.255  *               255.255.255.255 UH    0      0        0 ppp1
192.168.3.0     *               255.255.255.0   U     0      0        0 ppp1
default         *               0.0.0.0         U     0      0        0 ppp0


针对OSX
-------
$ ps aux
$ netstat -ap tcp
$ otool -L


TAB 键自动补齐 link 目录后的 /
--------------------------
echo "set mark-symlinked-directories on" >> ~/.inputrc
Ctrl+x, then Ctrl+r


scrot
-----
抓屏软件

scrot -d 3 x.jpg
scrot -d 3 -s x.jpg
scrot -u x.jpg

  -s, --select              interactively choose a window or rectangle
                            with the mouse
  -b, --border              When selecting a window, grab wm border too
  -u, --focused             use the currently focused window


git rev-list --objects --all |     while read sha1 fname;     do         echo -e "$(git cat-file -s $sha1)\t$\t$fname";     done | sort -n > filesize.txt

cpp -dM /dev/null show all the predefined macros. 可以用来检测系统预定义宏

lsof -i :$port | grep -v "PID" | awk '{print "kill -9",$2}' | sh  # 杀掉绑定了指定端口的程序


dmesg and watch
---------------
watch -n 0.1 "dmesg | tail -n $((LINES-6))"


pushd dirs and popd
-------------------
$ pushd /usr/local/src  #将当前目录push，并且跳到/usr/local/src
$ dirs -v               #查看目录堆栈
$ pushd +n              #跳转到第几个堆栈(跳转后堆栈会变，需再次dirs -v)
$ pushd -n ~            #只压入堆栈，而不跳转目录
$ dirs -c               #清空堆栈
$ popd +N               #删除堆栈元素


用U盘安装系统
diskutil list
diskutil umountDisk /dev/disk2
hdiutil convert -format UDRW debian-8.8.0-amd64-CD-1.iso -o debian-8.8.0-amd64-CD-1.dmg
sudo dd if=debian-8.8.0-amd64-CD-1.dmg of=/dev/[r]disk2 bs=4m  [/1m/1M]
diskutil eject /dev/disk1

反过来，可以备份整个系统（rpi,odroid...）
dd if=/dev/disk0 of=fdimage.img count=2880

另，hdiutil convert 这一步是将 iso 转换成 osx 的 UDIF格式，Linux下，iso 和 img通用，可以直接改后缀名(https://www.techwalla.com/articles/what-are-the-differences-between-iso-and-img-files)。
[UDWR]https://en.wikipedia.org/wiki/Apple_Disk_Image#UDIF_data_format, https://en.wikipedia.org/wiki/ISO_image
